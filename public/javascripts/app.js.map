{"version":3,"sources":["app/scripts/album.js","app/scripts/app.js","app/scripts/collection.js","app/scripts/landing.js"],"names":[],"mappingshEA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlBA;AAAA","file":"public/javascripts/app.js","sourcesContent":["  // Example Album\n var albumPicasso = {\n   name: 'The Colors',\n   artist: 'Pablo Picasso',\n   label: 'Cubism',\n   year: '1881',\n   albumArtUrl: '/images/album-placeholder.png',\n   songs: [\n       { name: 'Blue', length: '4:26' },\n       { name: 'Green', length: '3:14' },\n       { name: 'Red', length: '5:01' },\n       { name: 'Pink', length: '3:21'},\n       { name: 'Magenta', length: '2:15'}\n     ]\n };\n \n // Another Example Album\n var albumMarconi = {\n   name: 'The Telephone',\n   artist: 'Guglielmo Marconi',\n   label: 'EM',\n   year: '1909',\n   albumArtUrl: '/images/album-placeholder.png',\n   songs: [\n       { name: 'Hello, Operator?', length: '1:01' },\n       { name: 'Ring, ring, ring', length: '5:01' },\n       { name: 'Fits in your pocket', length: '3:21'},\n       { name: 'Can you hear me now?', length: '3:14' },\n       { name: 'Wrong phone number', length: '2:15'}\n     ]\n };\nvar currentlyPlayingSong = null;\n\n var createSongRow = function(songNumber, songName, songLength) {\n   var template =\n       '<tr>'\n     + '  <td class=\"song-number col-md-1\" data-song-number=\"' + songNumber + '\">' + songNumber + '</td>'\n     + '  <td class=\"col-md-9\">' + songName + '</td>'\n     + '  <td class=\"col-md-2\">' + songLength + '</td>'\n     + '</tr>'\n     ;\n \n   var $row = $(template);\n \n   var onHover = function(event) {\n     var songNumberCell = $(this).find('.song-number');\n     songNumberCell.html('<a class=\"album-song-button\"><i class=\"fa fa-play\"></i></a>');\n     var songNumber = songNumberCell.data('.song-number');\n     if (songNumber !== currentlyPlayingSong) {\n      songNumberCell.html('<a class=\"album-song-button\"><i class=\"fa fa-play\"></i></a>');\n     }\n   };\n \n   var offHover = function(event) {\n     var songNumberCell = $(this).find('.song-number');\n     var songNumber = songNumberCell.data('song-number');\n       if (songNumber !== currentlyPlayingSong) {\n      songNumberCell.html(songNumber);\n    }\n   };\n    // Toggle the play, pause, and song number based on the button clicked.\n    var clickHandler = function(event) {\n    var songNumber = $(this).data('song-number');\n         if (currentlyPlayingSong !== null) {\n       // Revert to song number for currently playing song because user started playing new song.\n       currentlyPlayingCell = $('.song-number[data-song-number=\"' + currentlyPlayingSong + '\"]');\n       currentlyPlayingCell.html(currentlyPlayingSong);\n     }\n \n     if (currentlyPlayingSong !== songNumber) {\n       // Switch from Play -> Pause button to indicate new song is playing.\n       $(this).html('<a class=\"album-song-button\"><i class=\"fa fa-pause\"></i></a>');\n       currentlyPlayingSong = songNumber;\n     }\n     else if (currentlyPlayingSong === songNumber) {\n       // Switch from Pause -> Play button to pause currently playing song.\n       $(this).html('<a class=\"album-song-button\"><i class=\"fa fa-play\"></i></a>');\n       currentlyPlayingSong = null;\n     }\n   };\n\n  $row.find('.song-number').click(clickHandler);\n   $row.hover(onHover, offHover);\n   return $row;\n\n };\n \n  var changeAlbumView = function(album) {\n   // Update the album title\n   var $albumTitle = $('.album-title');\n   $albumTitle.text(album.name);\n \n   // Update the album artist\n   var $albumArtist = $('.album-artist');\n   $albumArtist.text(album.artist);\n \n   // Update the meta information\n   var $albumMeta = $('.album-meta-info');\n   $albumMeta.text(album.year + \" on \" + album.label);\n \n   // Update the album image\n   var $albumImage = $('.album-image img');\n   $albumImage.attr('src', album.albumArtUrl);\n \n   // Update the Song List\n   var $songList = $(\".album-song-listing\");\n   $songList.empty();\n   console.log($songList);\n   var songs = album.songs;\n   for (var i = 0; i < songs.length; i++) {\n    console.log(\"new song\");\n      var songData = songs[i];\n      var $newRow = createSongRow(i + 1, songData.name, songData.length);\n      $songList.append($newRow);\n   }\n \n };\n \n // This 'if' condition is used to prevent the jQuery modifications\n // from happening on non-Album view pages.\n //  - Use a regex to validate that the url has \"/album\" in its path.\n if (document.URL.match(/\\/album.html/)) {\n   // Wait until the HTML is fully processed.\n   $(document).ready(function() {\n   \n     changeAlbumView(albumPicasso);\n   });\n }"," require(\"./landing\");\n require('./collection');\n require('./album');","  var buildAlbumThumbnail = function() {\n    var template =\n        '<div class=\"collection-album-container col-md-2\">'\n      + '  <div class=\"collection-album-image-container\">'\n      + '  <img src=\"/images/album-placeholder.png\"/>'\n      + '  </div>'\n      + '  <div class=\"caption album-collection-info\">'\n      + '    <p>'\n      + '      <a class=\"album-name\" href=\"/album.html\"> Album Name </a>'\n      + '      <br/>'\n      + '      <a href=\"/album.html\"> Artist name </a>'\n      + '      <br/>'\n      + '      X songs'\n      + '      <br/>'\n      + '    </p>'\n      + '  </div>'\n      + '</div>';\n \n   return $(template);\n };\n\n  var updateCollectionView = function() {\n   var $collection = $(\".collection-container .row\");\n   $collection.empty();\n \n\n   for (var i = 0; i < (Math.floor((Math.random() * 100) + 25)); i++) {\n     var $newThumbnail = buildAlbumThumbnail();\n     $collection.append($newThumbnail);\n   }\n      var onHover = function(event) {\n     $(this).append(buildAlbumOverlay(\"/album.html\"));\n   };\n     \n  var offHover = function(event) {\n    $(this).find('.collection-album-image-overlay').remove();\n  };\n\n  $collection.find('.collection-album-image-container').hover(onHover, offHover);\n };\n \n if (document.URL.match(/\\/collection.html/)) {\n  //wait until the HTML is fully processed\n  $(document).ready(function() {\n     updateCollectionView();\n  });\n}\n// below the buildAlbumThumbnail function\n\n  var buildAlbumOverlay = function(albumURL) {\n    var template =\n        '<div class=\"collection-album-image-overlay\">'\n      + '  <div class=\"collection-overlay-content\">'\n      + '    <a class=\"collection-overlay-button\" href=\"' + albumURL + '\">'\n      + '      <i class=\"fa fa-play\"></i>'\n      + '    </a>'\n      + '    &nbsp;'\n      + '    <a class=\"collection-overlay-button\">'\n      + '      <i class=\"fa fa-plus\"></i>'\n      + '    </a>'\n      + '  </div>'\n      + '</div>'\n      ;\n    return $(template);\n  };","\n $(document).ready(function() { \n   $('.hero-content h3').click(function(){\n      var subText = $(this).text();\n      $(this).text(subText + \"!\");\n   });\n   var onHoverAction = function(event) {\n     console.log('Hover action triggered.');\n     $(this).animate({'margin-top': '10px'});\n     $(this).animate({'font-size': '200px'});\n   };\n \n   var offHoverAction = function(event) {\n     console.log('Off-hover action triggered.');\n     $(this).animate({'margin-top': '0px'});\n     $(this).animate({'font-size': '70px'})\n   };\n   $('.selling-points .point').hover(onHoverAction, offHoverAction);\n});"]}